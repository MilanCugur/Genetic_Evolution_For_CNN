			Starting generation 1...
Creating models from individuals...
Creating and evaluating indiv #0
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3576: The name tf.log is deprecated. Please use tf.math.log instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3005: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

Epoch 1/5
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:207: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:216: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:223: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

60000/60000 [==============================] - 16s 261us/step - loss: 0.3876 - acc: 0.8750
Epoch 2/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0704 - acc: 0.9793
Epoch 3/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0439 - acc: 0.9872
Epoch 4/5
60000/60000 [==============================] - 7s 109us/step - loss: 0.0367 - acc: 0.9890
Epoch 5/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0309 - acc: 0.9904
10000/10000 [==============================] - 1s 100us/step
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:107: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:111: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

Creating and evaluating indiv #1
Epoch 1/5
60000/60000 [==============================] - 8s 140us/step - loss: 0.2936 - acc: 0.9029
Epoch 2/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0553 - acc: 0.9834
Epoch 3/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0384 - acc: 0.9880
Epoch 4/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0316 - acc: 0.9905
Epoch 5/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0273 - acc: 0.9918
10000/10000 [==============================] - 1s 103us/step
Creating and evaluating indiv #2
Epoch 1/5
60000/60000 [==============================] - 5s 79us/step - loss: 0.3522 - acc: 0.8898
Epoch 2/5
60000/60000 [==============================] - 4s 65us/step - loss: 0.0625 - acc: 0.9810
Epoch 3/5
60000/60000 [==============================] - 4s 65us/step - loss: 0.0442 - acc: 0.9866
Epoch 4/5
60000/60000 [==============================] - 4s 64us/step - loss: 0.0331 - acc: 0.9902
Epoch 5/5
60000/60000 [==============================] - 4s 65us/step - loss: 0.0272 - acc: 0.9920
10000/10000 [==============================] - 1s 77us/step
Creating and evaluating indiv #3
Epoch 1/5
60000/60000 [==============================] - 8s 132us/step - loss: 0.4581 - acc: 0.8456
Epoch 2/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0677 - acc: 0.9801
Epoch 3/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0445 - acc: 0.9865
Epoch 4/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0346 - acc: 0.9894
Epoch 5/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0284 - acc: 0.9912
10000/10000 [==============================] - 1s 106us/step
Creating and evaluating indiv #4
Epoch 1/5
60000/60000 [==============================] - 7s 125us/step - loss: 0.4031 - acc: 0.8736
Epoch 2/5
60000/60000 [==============================] - 7s 109us/step - loss: 0.0654 - acc: 0.9808
Epoch 3/5
60000/60000 [==============================] - 7s 109us/step - loss: 0.0435 - acc: 0.9872
Epoch 4/5
60000/60000 [==============================] - 7s 109us/step - loss: 0.0310 - acc: 0.9909
Epoch 5/5
60000/60000 [==============================] - 7s 109us/step - loss: 0.0277 - acc: 0.9915
10000/10000 [==============================] - 1s 96us/step
Creating and evaluating indiv #5
Epoch 1/5
60000/60000 [==============================] - 8s 139us/step - loss: 0.3923 - acc: 0.8675
Epoch 2/5
60000/60000 [==============================] - 7s 120us/step - loss: 0.0714 - acc: 0.9783
Epoch 3/5
60000/60000 [==============================] - 7s 120us/step - loss: 0.0477 - acc: 0.9856
Epoch 4/5
60000/60000 [==============================] - 7s 120us/step - loss: 0.0363 - acc: 0.9890
Epoch 5/5
60000/60000 [==============================] - 7s 121us/step - loss: 0.0321 - acc: 0.9896
10000/10000 [==============================] - 1s 106us/step
Creating and evaluating indiv #6
Epoch 1/5
60000/60000 [==============================] - 8s 135us/step - loss: 0.4559 - acc: 0.8474
Epoch 2/5
60000/60000 [==============================] - 7s 118us/step - loss: 0.0706 - acc: 0.9781
Epoch 3/5
60000/60000 [==============================] - 7s 118us/step - loss: 0.0451 - acc: 0.9864
Epoch 4/5
60000/60000 [==============================] - 7s 119us/step - loss: 0.0365 - acc: 0.9888
Epoch 5/5
60000/60000 [==============================] - 7s 118us/step - loss: 0.0308 - acc: 0.9904
10000/10000 [==============================] - 1s 109us/step
Creating and evaluating indiv #7
Epoch 1/5
60000/60000 [==============================] - 8s 134us/step - loss: 0.3718 - acc: 0.8817
Epoch 2/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0609 - acc: 0.9820
Epoch 3/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0418 - acc: 0.9871
Epoch 4/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0331 - acc: 0.9900
Epoch 5/5
60000/60000 [==============================] - 7s 116us/step - loss: 0.0282 - acc: 0.9916
10000/10000 [==============================] - 1s 103us/step
Creating and evaluating indiv #8
Epoch 1/5
60000/60000 [==============================] - 8s 132us/step - loss: 0.4742 - acc: 0.8425
Epoch 2/5
60000/60000 [==============================] - 7s 116us/step - loss: 0.0851 - acc: 0.9752
Epoch 3/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0570 - acc: 0.9835
Epoch 4/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0424 - acc: 0.9871
Epoch 5/5
60000/60000 [==============================] - 7s 115us/step - loss: 0.0384 - acc: 0.9885
10000/10000 [==============================] - 1s 105us/step
Creating and evaluating indiv #9
Epoch 1/5
60000/60000 [==============================] - 8s 126us/step - loss: 0.3501 - acc: 0.8833
Epoch 2/5
60000/60000 [==============================] - 6s 103us/step - loss: 0.0636 - acc: 0.9807
Epoch 3/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0440 - acc: 0.9864
Epoch 4/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0346 - acc: 0.9894
Epoch 5/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0276 - acc: 0.9916
10000/10000 [==============================] - 1s 97us/step
Creating and evaluating indiv #10
Epoch 1/5
60000/60000 [==============================] - 8s 140us/step - loss: 0.3202 - acc: 0.8999
Epoch 2/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0594 - acc: 0.9827
Epoch 3/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.0428 - acc: 0.9870
Epoch 4/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0339 - acc: 0.9900
Epoch 5/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.0269 - acc: 0.9917
10000/10000 [==============================] - 1s 107us/step
Creating and evaluating indiv #11
Epoch 1/5
60000/60000 [==============================] - 6s 93us/step - loss: 0.3404 - acc: 0.8907
Epoch 2/5
60000/60000 [==============================] - 5s 77us/step - loss: 0.0578 - acc: 0.9825
Epoch 3/5
60000/60000 [==============================] - 5s 78us/step - loss: 0.0400 - acc: 0.9876
Epoch 4/5
60000/60000 [==============================] - 5s 77us/step - loss: 0.0305 - acc: 0.9906
Epoch 5/5
60000/60000 [==============================] - 5s 78us/step - loss: 0.0253 - acc: 0.9919
10000/10000 [==============================] - 1s 87us/step
Creating and evaluating indiv #12
Epoch 1/5
60000/60000 [==============================] - 9s 142us/step - loss: 0.3721 - acc: 0.8788
Epoch 2/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0640 - acc: 0.9808
Epoch 3/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0416 - acc: 0.9876
Epoch 4/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.0344 - acc: 0.9894
Epoch 5/5
60000/60000 [==============================] - 7s 121us/step - loss: 0.0282 - acc: 0.9917
10000/10000 [==============================] - 1s 107us/step
Creating and evaluating indiv #13
Epoch 1/5
60000/60000 [==============================] - 8s 129us/step - loss: 0.3126 - acc: 0.8980
Epoch 2/5
60000/60000 [==============================] - 7s 111us/step - loss: 0.0547 - acc: 0.9826
Epoch 3/5
60000/60000 [==============================] - 7s 111us/step - loss: 0.0394 - acc: 0.9882
Epoch 4/5
60000/60000 [==============================] - 7s 111us/step - loss: 0.0313 - acc: 0.9906
Epoch 5/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0284 - acc: 0.9913
10000/10000 [==============================] - 1s 102us/step
Creating and evaluating indiv #14
Epoch 1/5
60000/60000 [==============================] - 5s 79us/step - loss: 0.3565 - acc: 0.8831
Epoch 2/5
60000/60000 [==============================] - 4s 65us/step - loss: 0.0639 - acc: 0.9811
Epoch 3/5
60000/60000 [==============================] - 4s 66us/step - loss: 0.0403 - acc: 0.9875
Epoch 4/5
60000/60000 [==============================] - 4s 65us/step - loss: 0.0310 - acc: 0.9908
Epoch 5/5
60000/60000 [==============================] - 4s 66us/step - loss: 0.0252 - acc: 0.9923
10000/10000 [==============================] - 1s 78us/step
Creating and evaluating indiv #15
Epoch 1/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.3306 - acc: 0.8901
Epoch 2/5
60000/60000 [==============================] - 6s 106us/step - loss: 0.0615 - acc: 0.9815
Epoch 3/5
60000/60000 [==============================] - 6s 107us/step - loss: 0.0438 - acc: 0.9868
Epoch 4/5
60000/60000 [==============================] - 6s 106us/step - loss: 0.0353 - acc: 0.9892
Epoch 5/5
60000/60000 [==============================] - 6s 108us/step - loss: 0.0273 - acc: 0.9914
10000/10000 [==============================] - 1s 107us/step
Creating and evaluating indiv #16
Epoch 1/5
60000/60000 [==============================] - 7s 121us/step - loss: 0.3080 - acc: 0.8993
Epoch 2/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0614 - acc: 0.9817
Epoch 3/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0397 - acc: 0.9879
Epoch 4/5
60000/60000 [==============================] - 6s 105us/step - loss: 0.0331 - acc: 0.9898
Epoch 5/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0263 - acc: 0.9919
10000/10000 [==============================] - 1s 98us/step
Creating and evaluating indiv #17
Epoch 1/5
60000/60000 [==============================] - 8s 128us/step - loss: 0.3643 - acc: 0.8817
Epoch 2/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0624 - acc: 0.9813
Epoch 3/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0437 - acc: 0.9869
Epoch 4/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0392 - acc: 0.9884
Epoch 5/5
60000/60000 [==============================] - 7s 110us/step - loss: 0.0302 - acc: 0.9909
10000/10000 [==============================] - 1s 102us/step
Creating and evaluating indiv #18
Epoch 1/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.3666 - acc: 0.8785
Epoch 2/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0597 - acc: 0.9816
Epoch 3/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0404 - acc: 0.9875
Epoch 4/5
60000/60000 [==============================] - 6s 104us/step - loss: 0.0362 - acc: 0.9888
Epoch 5/5
60000/60000 [==============================] - 6s 105us/step - loss: 0.0288 - acc: 0.9907
10000/10000 [==============================] - 1s 99us/step
Creating and evaluating indiv #19
Epoch 1/5
60000/60000 [==============================] - 8s 141us/step - loss: 0.3566 - acc: 0.8841
Epoch 2/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0685 - acc: 0.9790
Epoch 3/5
60000/60000 [==============================] - 7s 122us/step - loss: 0.0430 - acc: 0.9869
Epoch 4/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.0334 - acc: 0.9896
Epoch 5/5
60000/60000 [==============================] - 7s 123us/step - loss: 0.0288 - acc: 0.9909
10000/10000 [==============================] - 1s 107us/step
this gen fitnesses: [0.99   0.9925 0.9867 0.9865 0.9896 0.9879 0.9891 0.991  0.9884 0.9932
 0.9874 0.9878 0.9898 0.9936 0.9882 0.9911 0.9885 0.9919 0.9895 0.9922]
			Starting generation 2...
Creating models from individuals...
findIndividualsWithSameRoots...
Creating and evaluating indiv #0
Epoch 1/3
60000/60000 [==============================] - 8s 127us/step - loss: 0.1923 - acc: 0.9368
Epoch 2/3
60000/60000 [==============================] - 7s 111us/step - loss: 0.0389 - acc: 0.9882
Epoch 3/3
60000/60000 [==============================] - 7s 110us/step - loss: 0.0281 - acc: 0.9915
10000/10000 [==============================] - 1s 101us/step
Creating and evaluating indiv #1
Epoch 1/4
60000/60000 [==============================] - 8s 131us/step - loss: 0.2395 - acc: 0.9220
Epoch 2/4
60000/60000 [==============================] - 7s 115us/step - loss: 0.0493 - acc: 0.9851
Epoch 3/4
60000/60000 [==============================] - 7s 115us/step - loss: 0.0329 - acc: 0.9901
Epoch 4/4
60000/60000 [==============================] - 7s 115us/step - loss: 0.0271 - acc: 0.9918
10000/10000 [==============================] - 1s 102us/step
Creating and evaluating indiv #2
Epoch 1/4
60000/60000 [==============================] - 7s 118us/step - loss: 0.2715 - acc: 0.9121
Epoch 2/4
60000/60000 [==============================] - 6s 103us/step - loss: 0.0540 - acc: 0.9836
Epoch 3/4
60000/60000 [==============================] - 6s 104us/step - loss: 0.0352 - acc: 0.9888
Epoch 4/4
60000/60000 [==============================] - 6s 104us/step - loss: 0.0304 - acc: 0.9906
10000/10000 [==============================] - 1s 96us/step
Creating and evaluating indiv #3
Epoch 1/4
60000/60000 [==============================] - 7s 120us/step - loss: 0.2459 - acc: 0.9203
Epoch 2/4
60000/60000 [==============================] - 6s 104us/step - loss: 0.0490 - acc: 0.9851
Epoch 3/4
60000/60000 [==============================] - 6s 104us/step - loss: 0.0363 - acc: 0.9885
Epoch 4/4
60000/60000 [==============================] - 6s 104us/step - loss: 0.0295 - acc: 0.9910
10000/10000 [==============================] - 1s 99us/step
Creating and evaluating indiv #4
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #5
Epoch 1/4
60000/60000 [==============================] - 8s 137us/step - loss: 0.2310 - acc: 0.9243
Epoch 2/4
60000/60000 [==============================] - 7s 120us/step - loss: 0.0493 - acc: 0.9853
Epoch 3/4
60000/60000 [==============================] - 7s 121us/step - loss: 0.0338 - acc: 0.9893
Epoch 4/4
60000/60000 [==============================] - 7s 121us/step - loss: 0.0280 - acc: 0.9914
10000/10000 [==============================] - 1s 102us/step
Creating and evaluating indiv #6
Epoch 1/4
60000/60000 [==============================] - 7s 124us/step - loss: 0.2646 - acc: 0.9159
Epoch 2/4
60000/60000 [==============================] - 6s 108us/step - loss: 0.0542 - acc: 0.9841
Epoch 3/4
60000/60000 [==============================] - 7s 109us/step - loss: 0.0446 - acc: 0.9865
Epoch 4/4
60000/60000 [==============================] - 6s 108us/step - loss: 0.0357 - acc: 0.9895
10000/10000 [==============================] - 1s 98us/step
Creating and evaluating indiv #7
Epoch 1/4
60000/60000 [==============================] - 8s 133us/step - loss: 0.2801 - acc: 0.9076
Epoch 2/4
60000/60000 [==============================] - 7s 116us/step - loss: 0.0530 - acc: 0.9842
Epoch 3/4
60000/60000 [==============================] - 7s 116us/step - loss: 0.0374 - acc: 0.9887
Epoch 4/4
60000/60000 [==============================] - 7s 116us/step - loss: 0.0301 - acc: 0.9912
10000/10000 [==============================] - 1s 103us/step
Creating and evaluating indiv #8
Epoch 1/4
60000/60000 [==============================] - 8s 128us/step - loss: 0.2529 - acc: 0.9167
Epoch 2/4
60000/60000 [==============================] - 7s 112us/step - loss: 0.0487 - acc: 0.9853
Epoch 3/4
60000/60000 [==============================] - 7s 112us/step - loss: 0.0385 - acc: 0.9882
Epoch 4/4
60000/60000 [==============================] - 7s 113us/step - loss: 0.0300 - acc: 0.9910
10000/10000 [==============================] - 1s 100us/step
Creating and evaluating indiv #9
Epoch 1/3
60000/60000 [==============================] - 7s 116us/step - loss: 0.2117 - acc: 0.9337
Epoch 2/3
60000/60000 [==============================] - 6s 101us/step - loss: 0.0399 - acc: 0.9880
Epoch 3/3
60000/60000 [==============================] - 6s 102us/step - loss: 0.0295 - acc: 0.9912
10000/10000 [==============================] - 1s 97us/step
Creating and evaluating indiv #10
Epoch 1/4
60000/60000 [==============================] - 8s 139us/step - loss: 0.3344 - acc: 0.8839
Epoch 2/4
60000/60000 [==============================] - 7s 122us/step - loss: 0.0550 - acc: 0.9842
Epoch 3/4
60000/60000 [==============================] - 7s 123us/step - loss: 0.0429 - acc: 0.9875
Epoch 4/4
60000/60000 [==============================] - 7s 122us/step - loss: 0.0309 - acc: 0.9911
10000/10000 [==============================] - 1s 106us/step
Creating and evaluating indiv #11
Epoch 1/4
60000/60000 [==============================] - 5s 78us/step - loss: 0.3633 - acc: 0.8822
Epoch 2/4
60000/60000 [==============================] - 4s 66us/step - loss: 0.0697 - acc: 0.9787
Epoch 3/4
60000/60000 [==============================] - 4s 66us/step - loss: 0.0440 - acc: 0.9868
Epoch 4/4
60000/60000 [==============================] - 4s 65us/step - loss: 0.0364 - acc: 0.9890
10000/10000 [==============================] - 1s 80us/step
Creating and evaluating indiv #12
Epoch 1/4
60000/60000 [==============================] - 7s 123us/step - loss: 0.2774 - acc: 0.9097
Epoch 2/4
60000/60000 [==============================] - 7s 108us/step - loss: 0.0495 - acc: 0.9856
Epoch 3/4
60000/60000 [==============================] - 7s 108us/step - loss: 0.0361 - acc: 0.9890
Epoch 4/4
60000/60000 [==============================] - 6s 108us/step - loss: 0.0297 - acc: 0.9909
10000/10000 [==============================] - 1s 99us/step
Creating and evaluating indiv #13
Epoch 1/3
60000/60000 [==============================] - 7s 122us/step - loss: 0.1529 - acc: 0.9557
Epoch 2/3
60000/60000 [==============================] - 6s 107us/step - loss: 0.0334 - acc: 0.9896
Epoch 3/3
60000/60000 [==============================] - 6s 108us/step - loss: 0.0248 - acc: 0.9921
10000/10000 [==============================] - 1s 99us/step
Creating and evaluating indiv #14
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #15
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #16
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #17
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #18
			\Skipping training because model is the same as last gen
Creating and evaluating indiv #19
			\Skipping training because model is the same as last gen
this gen fitnesses: [0.9925 0.9929 0.989  0.99   0.9896 0.9917 0.9867 0.9911 0.9903 0.9888
 0.9902 0.9876 0.9915 0.9918 0.9882 0.9911 0.9885 0.9919 0.9895 0.9922]
The best individual [1 1 1 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 0] had fitness (accuracy): 0.9929
CPU times: user 13min 58s, sys: 2min 31s, total: 16min 30s
Wall time: 18min 18s